% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/id_mapping.R
\name{identifier_mapping}
\alias{identifier_mapping}
\alias{study_to_association}
\alias{study_to_variant}
\alias{study_to_trait}
\alias{association_to_study}
\alias{association_to_variant}
\alias{association_to_trait}
\alias{variant_to_study}
\alias{variant_to_association}
\alias{variant_to_trait}
\alias{trait_to_study}
\alias{trait_to_association}
\alias{trait_to_variant}
\title{GWAS accession identifier mapping}
\usage{
study_to_association(study_id, verbose = FALSE, warnings = TRUE)

study_to_variant(study_id, verbose = FALSE, warnings = TRUE)

study_to_trait(study_id, verbose = FALSE, warnings = TRUE)

association_to_study(association_id, verbose = FALSE, warnings = TRUE)

association_to_variant(association_id, verbose = FALSE, warnings = TRUE)

association_to_trait(association_id, verbose = FALSE, warnings = TRUE)

variant_to_study(variant_id, verbose = FALSE, warnings = TRUE)

variant_to_association(variant_id, verbose = FALSE, warnings = TRUE)

variant_to_trait(
  variant_id,
  keep_association_id = FALSE,
  verbose = FALSE,
  warnings = TRUE
)

trait_to_study(efo_id, verbose = FALSE, warnings = TRUE)

trait_to_association(efo_id, verbose = FALSE, warnings = TRUE)

trait_to_variant(efo_id, verbose = FALSE, warnings = TRUE)
}
\arguments{
\item{study_id, association_id, variant_id, efo_id}{A character vector of
accession identifiers for either studies (\code{study_id}), associations
(\code{association_id}), variants (\code{variant_id}) or traits
(\code{efo_id}).}

\item{verbose}{Whether the function should be
verbose about the different queries or not.}

\item{warnings}{Whether to print warnings.}

\item{keep_association_id}{In the case of the \code{variant_to_trait()}
function, the mapping from variant ids to EFO traits ids is performed via
association ids; this option allow you to keep the association identifier
in the final output (default is \code{FALSE}).}
}
\value{
A dataframe of two identifiers (three if \code{keep_association_id}
  is \code{TRUE} and if \code{variant_to_trait()} used). First column is the
  \emph{from} identifier and the second column is the \emph{to} identifier.
}
\description{
Use these functions to map between identifiers of studies, associations,
variants or traits. Each \code{association_id} maps to just one
\code{study_id}; all other mappings are one-to-many. Moreover, in the case of
the mapping of variant identifiers to trait identifiers (\code{efo_id}) the
mapping is first performed from variant id to association id, and only then
to trait identifier. All other mappings are direct in the sense that the Gwas
Catalog REST API provides the endpoints that make those direct queries
possible.
}
\examples{
# Map GWAS study identifiers to association identifiers
study_to_association(c('GCST001084', 'GCST001085'))

# Map GWAS study identifiers to variant identifiers
study_to_variant(c('GCST001084', 'GCST001085'))

# Map GWAS study identifiers to EFO trait identifiers
study_to_trait(c('GCST001084', 'GCST001085'))

# Map GWAS association identifiers to study identifiers
association_to_study(c('24300097', '24299759'))

# Map GWAS association identifiers to variant identifiers
association_to_variant(c('24300097', '24299759'))

# Map GWAS association identifiers to EFO trait identifiers
association_to_trait(c('24300097', '24299759'))

# Map GWAS variant identifiers to study identifiers
variant_to_study(c('rs7904579', 'rs138331350'))

# Map GWAS variant identifiers to association identifiers
variant_to_association(c('rs7904579', 'rs138331350'))

# Map GWAS variant identifiers to EFO trait identifiers
variant_to_trait(c('rs7904579', 'rs138331350'))

# Map GWAS variant identifiers to EFO trait identifiers
# but keep the intermediate association identifier
variant_to_trait(c('rs7904579', 'rs138331350'), keep_association_id = TRUE)

# Map EFO trait identifiers to study identifiers
trait_to_study(c('EFO_0005108', 'EFO_0005109'))

# Map EFO trait identifiers to association identifiers
trait_to_association(c('EFO_0005108', 'EFO_0005109'))

# Map EFO trait identifiers to variant identifiers
trait_to_variant('EFO_0005229')

}
